{"version":3,"sources":["../src/network-detect.js"],"names":["NetworkDetect","phone","toString","prototype","getNetworks","mtn","glo","airtel","starcomms","visafone","multilinks","zoom","ntel","smile","getNetworkName","validate","phone_primary_prefix","getPhonePrefix","phone_secondary_prefix","networks","includes","length","substr","Error","match"],"mappings":"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","sourcesContent":["const NetworkDetect = function (phone) {\r\n  this.phone = phone.toString()\r\n}\r\n\r\nNetworkDetect.prototype = {\r\n  getNetworks: function () {\r\n    return {\r\n      '9mobile': ['0809', '0909', '0817', '0818', '0908'],\r\n      mtn: [\r\n        '0806',\r\n        '0803',\r\n        '0816',\r\n        '0813',\r\n        '0810',\r\n        '0814',\r\n        '0903',\r\n        '0906',\r\n        '0703',\r\n        '0706',\r\n      ],\r\n      glo: ['0805', '0705', '0905', '0807', '0815'],\r\n      airtel: ['0802', '0902', '0701', '0808', '0708', '0812', '0907'],\r\n      starcomms: ['07028', '07029', '0819'],\r\n      visafone: ['07025', '07026', '0704'],\r\n      multilinks: ['07027', '0709'],\r\n      zoom: ['0707'],\r\n      ntel: ['0804'],\r\n      smile: ['0702'],\r\n    }\r\n  },\r\n\r\n  getNetworkName: function () {\r\n    this.validate()\r\n\r\n    let phone_primary_prefix = this.getPhonePrefix()\r\n    let phone_secondary_prefix = this.getPhonePrefix(5)\r\n    let networks = this.getNetworks()\r\n\r\n    if (networks.mtn.includes(phone_primary_prefix)) {\r\n      return 'MTN'\r\n    }\r\n\r\n    if (networks.glo.includes(phone_primary_prefix)) {\r\n      return 'GLO'\r\n    }\r\n\r\n    if (networks['9mobile'].includes(phone_primary_prefix)) {\r\n      return '9mobile'\r\n    }\r\n\r\n    if (networks.airtel.includes(phone_primary_prefix)) {\r\n      return 'Airtel'\r\n    }\r\n\r\n    if (\r\n      networks.starcomms.includes(phone_secondary_prefix) ||\r\n      networks.starcomms.includes(phone_primary_prefix)\r\n    ) {\r\n      return 'Starcomms'\r\n    }\r\n\r\n    if (\r\n      networks.visafone.includes(phone_secondary_prefix) ||\r\n      networks.visafone.includes(phone_primary_prefix)\r\n    ) {\r\n      return 'Visafone'\r\n    }\r\n\r\n    if (\r\n      networks.multilinks.includes(phone_primary_prefix) ||\r\n      networks.multilinks.includes(phone_secondary_prefix)\r\n    ) {\r\n      return 'Multilinks'\r\n    }\r\n\r\n    if (networks.zoom.includes(phone_primary_prefix)) {\r\n      return 'Zoom'\r\n    }\r\n\r\n    if (networks.ntel.includes(phone_primary_prefix)) {\r\n      return 'Ntel'\r\n    }\r\n\r\n    if (networks.smile.includes(phone_primary_prefix)) {\r\n      return 'Smile'\r\n    }\r\n\r\n    return null\r\n  },\r\n\r\n  getPhonePrefix: function (length) {\r\n    length = length || 4\r\n    return this.phone.substr(0, length)\r\n  },\r\n\r\n  validate: function () {\r\n    //Check if no value is passed\r\n    if (!this.phone) {\r\n      throw new Error('Invalid phone number')\r\n    }\r\n\r\n    //Check if phone number contains unwanted characters\r\n    if (this.phone.match(/[^0-9]/)) {\r\n      throw new Error('Phone number contains unwanted characters')\r\n    }\r\n\r\n    if (this.phone.length < 11) {\r\n      throw new Error(\r\n        'ðŸš« Error! Invalid number. Number must not be lesser than 11 digits'\r\n      )\r\n    }\r\n\r\n    if (this.phone.length > 11) {\r\n      throw new Error(\r\n        'ðŸš« Error! Invalid number. Number must not be greater than 11 digits'\r\n      )\r\n    }\r\n\r\n    return true\r\n  },\r\n}\r\n"],"file":"network-detect.js"}