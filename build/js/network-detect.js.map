{"version":3,"sources":["../../src/network-detect.js"],"names":["NetworkDetect","phone","toString","trim","prototype","getNetworks","mtn","glo","airtel","starcomms","visafone","multilinks","zoom","ntel","smile","getNetworkName","validate","phone_primary_prefix","getPhonePrefix","phone_secondary_prefix","networks","includes","length","substr","Error","match"],"mappings":"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","sourcesContent":["const NetworkDetect = function (phone) {\n  this.phone = phone.toString().trim()\n}\n\nNetworkDetect.prototype = {\n  getNetworks: function () {\n    return {\n      '9mobile': ['0809', '0909', '0817', '0818', '0908'],\n      mtn: [\n        '0806',\n        '0803',\n        '0816',\n        '0813',\n        '0810',\n        '0814',\n        '0903',\n        '0906',\n        '0703',\n        '0706',\n      ],\n      glo: ['0805', '0705', '0905', '0807', '0815'],\n      airtel: ['0802', '0902', '0701', '0808', '0708', '0812', '0907'],\n      starcomms: ['07028', '07029', '0819'],\n      visafone: ['07025', '07026', '0704'],\n      multilinks: ['07027', '0709'],\n      zoom: ['0707'],\n      ntel: ['0804'],\n      smile: ['0702'],\n    }\n  },\n\n  getNetworkName: function () {\n    this.validate()\n\n    let phone_primary_prefix = this.getPhonePrefix()\n    let phone_secondary_prefix = this.getPhonePrefix(5)\n    let networks = this.getNetworks()\n\n    if (networks.mtn.includes(phone_primary_prefix)) {\n      return 'MTN'\n    }\n\n    if (networks.glo.includes(phone_primary_prefix)) {\n      return 'GLO'\n    }\n\n    if (networks['9mobile'].includes(phone_primary_prefix)) {\n      return '9mobile'\n    }\n\n    if (networks.airtel.includes(phone_primary_prefix)) {\n      return 'Airtel'\n    }\n\n    if (\n      networks.starcomms.includes(phone_secondary_prefix) ||\n      networks.starcomms.includes(phone_primary_prefix)\n    ) {\n      return 'Starcomms'\n    }\n\n    if (\n      networks.visafone.includes(phone_secondary_prefix) ||\n      networks.visafone.includes(phone_primary_prefix)\n    ) {\n      return 'Visafone'\n    }\n\n    if (\n      networks.multilinks.includes(phone_primary_prefix) ||\n      networks.multilinks.includes(phone_secondary_prefix)\n    ) {\n      return 'Multilinks'\n    }\n\n    if (networks.zoom.includes(phone_primary_prefix)) {\n      return 'Zoom'\n    }\n\n    if (networks.ntel.includes(phone_primary_prefix)) {\n      return 'Ntel'\n    }\n\n    if (networks.smile.includes(phone_primary_prefix)) {\n      return 'Smile'\n    }\n\n    return null\n  },\n\n  getPhonePrefix: function (length) {\n    length = length || 4\n    return this.phone.substr(0, length)\n  },\n\n  validate: function () {\n    //Check if no value is passed\n    if (!this.phone) {\n      throw new Error('Invalid phone number')\n    }\n\n    //Check if phone number contains unwanted characters\n    if (this.phone.match(/[^0-9]/)) {\n      throw new Error('Phone number contains unwanted characters')\n    }\n\n    if (this.phone.length < 11) {\n      throw new Error(\n        'ðŸš« Error! Invalid number. Number must not be lesser than 11 digits'\n      )\n    }\n\n    if (this.phone.length > 11) {\n      throw new Error(\n        'ðŸš« Error! Invalid number. Number must not be greater than 11 digits'\n      )\n    }\n\n    return true\n  },\n}\n"],"file":"network-detect.js"}